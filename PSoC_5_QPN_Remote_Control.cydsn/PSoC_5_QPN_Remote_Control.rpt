Loading plugins phase: Elapsed time ==> 0s.812ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\PSoC_5_QPN_Remote_Control.cyprj -d CY8C5888LTI-LP097 -s E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

ADD: pft.M0074: information: A (re)build is required to use the analog device editor. Unable to load the necessary information from the cyfit file. Partial/wrong data will be displayed until this has been resolved.
 * E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\PSoC_5_QPN_Remote_Control.cydwr ()

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 1s.851ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.078ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  PSoC_5_QPN_Remote_Control.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\PSoC_5_QPN_Remote_Control.cyprj -dcpsoc3 PSoC_5_QPN_Remote_Control.v -verilog
======================================================================

======================================================================
Compiling:  PSoC_5_QPN_Remote_Control.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\PSoC_5_QPN_Remote_Control.cyprj -dcpsoc3 PSoC_5_QPN_Remote_Control.v -verilog
======================================================================

======================================================================
Compiling:  PSoC_5_QPN_Remote_Control.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\PSoC_5_QPN_Remote_Control.cyprj -dcpsoc3 -verilog PSoC_5_QPN_Remote_Control.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Wed Mar 29 18:26:47 2017


======================================================================
Compiling:  PSoC_5_QPN_Remote_Control.v
Program  :   vpp
Options  :    -yv2 -q10 PSoC_5_QPN_Remote_Control.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Wed Mar 29 18:26:47 2017

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\mux_v1_10\mux_v1_10.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'PSoC_5_QPN_Remote_Control.ctl'.
PSoC_5_QPN_Remote_Control.v (line 698, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 947, col 46):  Note: Substituting module 'sub_vi_vv' for '-'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 977, col 46):  Note: Substituting module 'add_vi_vv' for '+'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  PSoC_5_QPN_Remote_Control.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\PSoC_5_QPN_Remote_Control.cyprj -dcpsoc3 -verilog PSoC_5_QPN_Remote_Control.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Wed Mar 29 18:26:48 2017

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\codegentemp\PSoC_5_QPN_Remote_Control.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\codegentemp\PSoC_5_QPN_Remote_Control.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\mux_v1_10\mux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  PSoC_5_QPN_Remote_Control.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\PSoC_5_QPN_Remote_Control.cyprj -dcpsoc3 -verilog PSoC_5_QPN_Remote_Control.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Wed Mar 29 18:26:48 2017

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\codegentemp\PSoC_5_QPN_Remote_Control.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\codegentemp\PSoC_5_QPN_Remote_Control.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\mux_v1_10\mux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\ADC:SAR:Net_221\
	\ADC:SAR:Net_381\
	\ADC:bSAR_SEQ:sw_soc\
	\ADC:soc_out\
	\ADC:Net_3905\
	\ADC:Net_3867\
	\ADC:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC:MODULE_1:g1:a0:xneq\
	\ADC:MODULE_1:g1:a0:xlt\
	\ADC:MODULE_1:g1:a0:xlte\
	\ADC:MODULE_1:g1:a0:xgt\
	\ADC:MODULE_1:g1:a0:xgte\
	\ADC:MODULE_1:lt\
	\ADC:MODULE_1:gt\
	\ADC:MODULE_1:gte\
	\ADC:MODULE_1:lte\
	\ADC:MODULE_1:neq\
	\UART:BUART:HalfDuplexSend\
	\UART:BUART:FinalAddrMode_2\
	\UART:BUART:FinalAddrMode_1\
	\UART:BUART:FinalAddrMode_0\
	\UART:BUART:reset_sr\
	Net_3905
	Net_3906
	\CAN:Net_31\
	\CAN:Net_30\
	\PWM_L1:PWMUDB:km_run\
	\PWM_L1:PWMUDB:ctrl_cmpmode2_2\
	\PWM_L1:PWMUDB:ctrl_cmpmode2_1\
	\PWM_L1:PWMUDB:ctrl_cmpmode2_0\
	\PWM_L1:PWMUDB:ctrl_cmpmode1_2\
	\PWM_L1:PWMUDB:ctrl_cmpmode1_1\
	\PWM_L1:PWMUDB:ctrl_cmpmode1_0\
	\PWM_L1:PWMUDB:capt_rising\
	\PWM_L1:PWMUDB:capt_falling\
	\PWM_L1:PWMUDB:trig_rise\
	\PWM_L1:PWMUDB:trig_fall\
	\PWM_L1:PWMUDB:sc_kill\
	\PWM_L1:PWMUDB:min_kill\
	\PWM_L1:PWMUDB:km_tc\
	\PWM_L1:PWMUDB:db_tc\
	\PWM_L1:PWMUDB:dith_sel\
	\PWM_L1:PWMUDB:compare2\
	\PWM_L1:Net_101\
	Net_6268
	Net_6269
	\PWM_L1:PWMUDB:MODULE_2:b_31\
	\PWM_L1:PWMUDB:MODULE_2:b_30\
	\PWM_L1:PWMUDB:MODULE_2:b_29\
	\PWM_L1:PWMUDB:MODULE_2:b_28\
	\PWM_L1:PWMUDB:MODULE_2:b_27\
	\PWM_L1:PWMUDB:MODULE_2:b_26\
	\PWM_L1:PWMUDB:MODULE_2:b_25\
	\PWM_L1:PWMUDB:MODULE_2:b_24\
	\PWM_L1:PWMUDB:MODULE_2:b_23\
	\PWM_L1:PWMUDB:MODULE_2:b_22\
	\PWM_L1:PWMUDB:MODULE_2:b_21\
	\PWM_L1:PWMUDB:MODULE_2:b_20\
	\PWM_L1:PWMUDB:MODULE_2:b_19\
	\PWM_L1:PWMUDB:MODULE_2:b_18\
	\PWM_L1:PWMUDB:MODULE_2:b_17\
	\PWM_L1:PWMUDB:MODULE_2:b_16\
	\PWM_L1:PWMUDB:MODULE_2:b_15\
	\PWM_L1:PWMUDB:MODULE_2:b_14\
	\PWM_L1:PWMUDB:MODULE_2:b_13\
	\PWM_L1:PWMUDB:MODULE_2:b_12\
	\PWM_L1:PWMUDB:MODULE_2:b_11\
	\PWM_L1:PWMUDB:MODULE_2:b_10\
	\PWM_L1:PWMUDB:MODULE_2:b_9\
	\PWM_L1:PWMUDB:MODULE_2:b_8\
	\PWM_L1:PWMUDB:MODULE_2:b_7\
	\PWM_L1:PWMUDB:MODULE_2:b_6\
	\PWM_L1:PWMUDB:MODULE_2:b_5\
	\PWM_L1:PWMUDB:MODULE_2:b_4\
	\PWM_L1:PWMUDB:MODULE_2:b_3\
	\PWM_L1:PWMUDB:MODULE_2:b_2\
	\PWM_L1:PWMUDB:MODULE_2:b_1\
	\PWM_L1:PWMUDB:MODULE_2:b_0\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:a_31\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:a_30\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:a_29\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:a_28\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:a_27\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:a_26\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:a_25\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:a_24\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_31\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_30\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_29\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_28\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_27\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_26\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_25\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_24\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_23\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_22\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_21\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_20\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_19\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_18\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_17\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_16\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_15\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_14\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_13\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_12\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_11\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_10\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_9\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_8\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_7\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_6\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_5\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_4\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_3\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_2\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_1\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:b_0\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_31\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_30\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_29\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_28\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_27\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_26\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_25\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_24\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_23\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_22\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_21\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_20\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_19\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_18\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_17\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_16\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_15\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_14\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_13\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_12\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_11\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_10\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_9\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_8\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_7\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_6\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_5\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_4\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_3\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_2\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_6270
	Net_6267
	\PWM_L1:Net_113\
	\PWM_L1:Net_107\
	\PWM_L1:Net_114\
	\PWM_L2:PWMUDB:km_run\
	\PWM_L2:PWMUDB:ctrl_cmpmode2_2\
	\PWM_L2:PWMUDB:ctrl_cmpmode2_1\
	\PWM_L2:PWMUDB:ctrl_cmpmode2_0\
	\PWM_L2:PWMUDB:ctrl_cmpmode1_2\
	\PWM_L2:PWMUDB:ctrl_cmpmode1_1\
	\PWM_L2:PWMUDB:ctrl_cmpmode1_0\
	\PWM_L2:PWMUDB:capt_rising\
	\PWM_L2:PWMUDB:capt_falling\
	\PWM_L2:PWMUDB:trig_rise\
	\PWM_L2:PWMUDB:trig_fall\
	\PWM_L2:PWMUDB:sc_kill\
	\PWM_L2:PWMUDB:min_kill\
	\PWM_L2:PWMUDB:km_tc\
	\PWM_L2:PWMUDB:db_tc\
	\PWM_L2:PWMUDB:dith_sel\
	\PWM_L2:PWMUDB:compare2\
	\PWM_L2:Net_101\
	Net_5559
	Net_5560
	\PWM_L2:PWMUDB:MODULE_3:b_31\
	\PWM_L2:PWMUDB:MODULE_3:b_30\
	\PWM_L2:PWMUDB:MODULE_3:b_29\
	\PWM_L2:PWMUDB:MODULE_3:b_28\
	\PWM_L2:PWMUDB:MODULE_3:b_27\
	\PWM_L2:PWMUDB:MODULE_3:b_26\
	\PWM_L2:PWMUDB:MODULE_3:b_25\
	\PWM_L2:PWMUDB:MODULE_3:b_24\
	\PWM_L2:PWMUDB:MODULE_3:b_23\
	\PWM_L2:PWMUDB:MODULE_3:b_22\
	\PWM_L2:PWMUDB:MODULE_3:b_21\
	\PWM_L2:PWMUDB:MODULE_3:b_20\
	\PWM_L2:PWMUDB:MODULE_3:b_19\
	\PWM_L2:PWMUDB:MODULE_3:b_18\
	\PWM_L2:PWMUDB:MODULE_3:b_17\
	\PWM_L2:PWMUDB:MODULE_3:b_16\
	\PWM_L2:PWMUDB:MODULE_3:b_15\
	\PWM_L2:PWMUDB:MODULE_3:b_14\
	\PWM_L2:PWMUDB:MODULE_3:b_13\
	\PWM_L2:PWMUDB:MODULE_3:b_12\
	\PWM_L2:PWMUDB:MODULE_3:b_11\
	\PWM_L2:PWMUDB:MODULE_3:b_10\
	\PWM_L2:PWMUDB:MODULE_3:b_9\
	\PWM_L2:PWMUDB:MODULE_3:b_8\
	\PWM_L2:PWMUDB:MODULE_3:b_7\
	\PWM_L2:PWMUDB:MODULE_3:b_6\
	\PWM_L2:PWMUDB:MODULE_3:b_5\
	\PWM_L2:PWMUDB:MODULE_3:b_4\
	\PWM_L2:PWMUDB:MODULE_3:b_3\
	\PWM_L2:PWMUDB:MODULE_3:b_2\
	\PWM_L2:PWMUDB:MODULE_3:b_1\
	\PWM_L2:PWMUDB:MODULE_3:b_0\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:a_31\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:a_30\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:a_29\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:a_28\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:a_27\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:a_26\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:a_25\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:a_24\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_31\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_30\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_29\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_28\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_27\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_26\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_25\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_24\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_23\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_22\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_21\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_20\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_19\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_18\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_17\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_16\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_15\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_14\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_13\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_12\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_11\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_10\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_9\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_8\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_7\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_6\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_5\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_4\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_3\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_2\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_1\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:b_0\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_31\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_30\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_29\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_28\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_27\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_26\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_25\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_24\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_23\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_22\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_21\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_20\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_19\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_18\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_17\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_16\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_15\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_14\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_13\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_12\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_11\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_10\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_9\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_8\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_7\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_6\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_5\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_4\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_3\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_2\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_5561
	Net_5558
	\PWM_L2:Net_113\
	\PWM_L2:Net_107\
	\PWM_L2:Net_114\
	Net_6157
	Net_6158
	Net_6159
	Net_6161
	Net_6162
	Net_6163
	Net_6164

    Synthesized names
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_31\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_30\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_29\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_28\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_27\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_26\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_25\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_24\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_23\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_22\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_21\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_20\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_19\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_18\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_17\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_16\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_15\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_14\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_13\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_12\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_11\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_10\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_9\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_8\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_7\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_6\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_5\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_4\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_3\
	\PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_2\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_31\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_30\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_29\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_28\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_27\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_26\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_25\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_24\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_23\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_22\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_21\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_20\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_19\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_18\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_17\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_16\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_15\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_14\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_13\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_12\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_11\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_10\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_9\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_8\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_7\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_6\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_5\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_4\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_3\
	\PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_2\

Deleted 306 User equations/components.
Deleted 60 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \ADC:SAR:vp_ctl_2\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:SAR:vn_ctl_1\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:SAR:vn_ctl_3\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:SAR:vp_ctl_1\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:SAR:vp_ctl_3\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:SAR:vn_ctl_0\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:SAR:vn_ctl_2\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:SAR:soc\ to \ADC:SAR:vp_ctl_0\
Aliasing zero to \ADC:SAR:vp_ctl_0\
Aliasing one to \ADC:AMuxHw_2_Decoder_enable\
Aliasing \ADC:bSAR_SEQ:status_7\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:bSAR_SEQ:status_6\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:bSAR_SEQ:status_5\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:bSAR_SEQ:status_4\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:bSAR_SEQ:status_3\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:bSAR_SEQ:status_2\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:bSAR_SEQ:status_1\ to \ADC:SAR:vp_ctl_0\
Aliasing Net_3441 to \ADC:bSAR_SEQ:status_0\
Aliasing \ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\ to \ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__SW_net_0 to \ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__VRx_net_0 to \ADC:AMuxHw_2_Decoder_enable\
Aliasing \UART:BUART:tx_hd_send_break\ to \ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:FinalParityType_1\ to \ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:FinalParityType_0\ to \ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_ctrl_mark\ to \ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_status_6\ to \ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_status_5\ to \ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_status_4\ to \ADC:SAR:vp_ctl_0\
Aliasing tmpOE__Rx_1_net_0 to \ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__Tx_1_net_0 to \ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__VRy_net_0 to \ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__TX_net_0 to \ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__RX_net_0 to \ADC:AMuxHw_2_Decoder_enable\
Aliasing \PWM_L1:PWMUDB:hwCapture\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:trig_out\ to \ADC:AMuxHw_2_Decoder_enable\
Aliasing Net_4235 to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:runmode_enable\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:ltch_kill_reg\\R\ to \PWM_L1:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L1:PWMUDB:ltch_kill_reg\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:min_kill_reg\\R\ to \PWM_L1:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L1:PWMUDB:min_kill_reg\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:final_kill\ to \ADC:AMuxHw_2_Decoder_enable\
Aliasing \PWM_L1:PWMUDB:dith_count_1\\R\ to \PWM_L1:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L1:PWMUDB:dith_count_1\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:dith_count_0\\R\ to \PWM_L1:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L1:PWMUDB:dith_count_0\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:status_6\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:status_4\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:cmp2\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:cmp1_status_reg\\R\ to \PWM_L1:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L1:PWMUDB:cmp1_status_reg\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:cmp2_status_reg\\R\ to \PWM_L1:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L1:PWMUDB:cmp2_status_reg\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:final_kill_reg\\R\ to \PWM_L1:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L1:PWMUDB:final_kill_reg\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:cs_addr_0\ to \PWM_L1:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L1:PWMUDB:pwm1_i\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:pwm2_i\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_23\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_22\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_21\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_20\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_19\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_18\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_17\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_16\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_15\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_14\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_13\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_12\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_11\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_10\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_9\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_8\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_7\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_6\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_5\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_4\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_3\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_2\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to \ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__LED1_net_0 to \ADC:AMuxHw_2_Decoder_enable\
Aliasing \PWM_L2:PWMUDB:hwCapture\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:trig_out\ to \ADC:AMuxHw_2_Decoder_enable\
Aliasing Net_5235 to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:runmode_enable\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:ltch_kill_reg\\R\ to \PWM_L2:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L2:PWMUDB:ltch_kill_reg\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:min_kill_reg\\R\ to \PWM_L2:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L2:PWMUDB:min_kill_reg\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:final_kill\ to \ADC:AMuxHw_2_Decoder_enable\
Aliasing \PWM_L2:PWMUDB:dith_count_1\\R\ to \PWM_L2:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L2:PWMUDB:dith_count_1\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:dith_count_0\\R\ to \PWM_L2:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L2:PWMUDB:dith_count_0\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:status_6\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:status_4\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:cmp2\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:cmp1_status_reg\\R\ to \PWM_L2:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L2:PWMUDB:cmp1_status_reg\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:cmp2_status_reg\\R\ to \PWM_L2:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L2:PWMUDB:cmp2_status_reg\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:final_kill_reg\\R\ to \PWM_L2:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L2:PWMUDB:final_kill_reg\\S\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:cs_addr_0\ to \PWM_L2:PWMUDB:runmode_enable\\R\
Aliasing \PWM_L2:PWMUDB:pwm1_i\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:pwm2_i\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_23\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_22\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_21\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_20\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_19\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_18\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_17\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_16\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_15\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_14\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_13\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_12\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_11\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_10\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_9\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_8\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_7\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_6\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_5\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_4\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_3\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_2\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\ to \ADC:AMuxHw_2_Decoder_enable\
Aliasing \Control_LED1:clk\ to \ADC:SAR:vp_ctl_0\
Aliasing \Control_LED1:rst\ to \ADC:SAR:vp_ctl_0\
Aliasing \ADC:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC:MODIN1_5\
Aliasing \ADC:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC:MODIN1_4\
Aliasing \ADC:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC:MODIN1_3\
Aliasing \ADC:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC:MODIN1_2\
Aliasing \ADC:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC:MODIN1_1\
Aliasing \ADC:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC:MODIN1_0\
Aliasing \UART:BUART:reset_reg\\D\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:min_kill_reg\\D\ to \ADC:AMuxHw_2_Decoder_enable\
Aliasing \PWM_L1:PWMUDB:prevCapture\\D\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:trig_last\\D\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L1:PWMUDB:ltch_kill_reg\\D\ to \ADC:AMuxHw_2_Decoder_enable\
Aliasing \PWM_L1:PWMUDB:prevCompare1\\D\ to \PWM_L1:PWMUDB:pwm_temp\
Aliasing \PWM_L1:PWMUDB:tc_i_reg\\D\ to \PWM_L1:PWMUDB:status_2\
Aliasing \PWM_L2:PWMUDB:min_kill_reg\\D\ to \ADC:AMuxHw_2_Decoder_enable\
Aliasing \PWM_L2:PWMUDB:prevCapture\\D\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:trig_last\\D\ to \ADC:SAR:vp_ctl_0\
Aliasing \PWM_L2:PWMUDB:ltch_kill_reg\\D\ to \ADC:AMuxHw_2_Decoder_enable\
Aliasing \PWM_L2:PWMUDB:prevCompare1\\D\ to \PWM_L2:PWMUDB:pwm_temp\
Aliasing \PWM_L2:PWMUDB:tc_i_reg\\D\ to \PWM_L2:PWMUDB:status_2\
Removing Lhs of wire \ADC:cmp_vv_vv_MODGEN_1\[2] = \ADC:MODULE_1:g1:a0:xeq\[339]
Removing Rhs of wire \ADC:clock\[3] = \ADC:Net_3874\[239]
Removing Rhs of wire \ADC:ch_addr_5\[5] = \ADC:bSAR_SEQ:count_5\[206]
Removing Rhs of wire \ADC:ch_addr_4\[7] = \ADC:bSAR_SEQ:count_4\[207]
Removing Rhs of wire \ADC:ch_addr_3\[9] = \ADC:bSAR_SEQ:count_3\[208]
Removing Rhs of wire \ADC:ch_addr_2\[11] = \ADC:bSAR_SEQ:count_2\[209]
Removing Rhs of wire \ADC:ch_addr_1\[13] = \ADC:bSAR_SEQ:count_1\[210]
Removing Rhs of wire \ADC:ch_addr_0\[15] = \ADC:bSAR_SEQ:count_0\[211]
Removing Lhs of wire \ADC:SAR:vp_ctl_2\[150] = \ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ADC:SAR:vn_ctl_1\[151] = \ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ADC:SAR:vn_ctl_3\[152] = \ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ADC:SAR:vp_ctl_1\[153] = \ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ADC:SAR:vp_ctl_3\[154] = \ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ADC:SAR:vn_ctl_0\[155] = \ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ADC:SAR:vn_ctl_2\[156] = \ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ADC:SAR:Net_188\[157] = \ADC:clock\[3]
Removing Lhs of wire \ADC:SAR:soc\[163] = \ADC:SAR:vp_ctl_0\[149]
Removing Rhs of wire zero[164] = \ADC:SAR:vp_ctl_0\[149]
Removing Rhs of wire \ADC:bSAR_SEQ:enable\[195] = \ADC:bSAR_SEQ:control_0\[196]
Removing Rhs of wire \ADC:bSAR_SEQ:load_period\[197] = \ADC:bSAR_SEQ:control_1\[198]
Removing Rhs of wire one[204] = \ADC:AMuxHw_2_Decoder_enable\[0]
Removing Lhs of wire \ADC:bSAR_SEQ:status_7\[212] = zero[164]
Removing Lhs of wire \ADC:bSAR_SEQ:status_6\[213] = zero[164]
Removing Lhs of wire \ADC:bSAR_SEQ:status_5\[214] = zero[164]
Removing Lhs of wire \ADC:bSAR_SEQ:status_4\[215] = zero[164]
Removing Lhs of wire \ADC:bSAR_SEQ:status_3\[216] = zero[164]
Removing Lhs of wire \ADC:bSAR_SEQ:status_2\[217] = zero[164]
Removing Lhs of wire \ADC:bSAR_SEQ:status_1\[218] = zero[164]
Removing Rhs of wire \ADC:bSAR_SEQ:status_0\[219] = \ADC:bSAR_SEQ:nrq_edge_detect_reg\[220]
Removing Rhs of wire Net_3441[227] = \ADC:bSAR_SEQ:status_0\[219]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newa_5\[250] = \ADC:MODIN1_5\[251]
Removing Lhs of wire \ADC:MODIN1_5\[251] = \ADC:ch_addr_5\[5]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newa_4\[252] = \ADC:MODIN1_4\[253]
Removing Lhs of wire \ADC:MODIN1_4\[253] = \ADC:ch_addr_4\[7]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newa_3\[254] = \ADC:MODIN1_3\[255]
Removing Lhs of wire \ADC:MODIN1_3\[255] = \ADC:ch_addr_3\[9]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newa_2\[256] = \ADC:MODIN1_2\[257]
Removing Lhs of wire \ADC:MODIN1_2\[257] = \ADC:ch_addr_2\[11]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newa_1\[258] = \ADC:MODIN1_1\[259]
Removing Lhs of wire \ADC:MODIN1_1\[259] = \ADC:ch_addr_1\[13]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newa_0\[260] = \ADC:MODIN1_0\[261]
Removing Lhs of wire \ADC:MODIN1_0\[261] = \ADC:ch_addr_0\[15]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newb_5\[262] = \ADC:MODIN2_5\[263]
Removing Lhs of wire \ADC:MODIN2_5\[263] = \ADC:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newb_4\[264] = \ADC:MODIN2_4\[265]
Removing Lhs of wire \ADC:MODIN2_4\[265] = \ADC:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newb_3\[266] = \ADC:MODIN2_3\[267]
Removing Lhs of wire \ADC:MODIN2_3\[267] = \ADC:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newb_2\[268] = \ADC:MODIN2_2\[269]
Removing Lhs of wire \ADC:MODIN2_2\[269] = \ADC:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newb_1\[270] = \ADC:MODIN2_1\[271]
Removing Lhs of wire \ADC:MODIN2_1\[271] = \ADC:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newb_0\[272] = \ADC:MODIN2_0\[273]
Removing Lhs of wire \ADC:MODIN2_0\[273] = \ADC:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:dataa_5\[274] = \ADC:ch_addr_5\[5]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:dataa_4\[275] = \ADC:ch_addr_4\[7]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:dataa_3\[276] = \ADC:ch_addr_3\[9]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:dataa_2\[277] = \ADC:ch_addr_2\[11]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:dataa_1\[278] = \ADC:ch_addr_1\[13]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:dataa_0\[279] = \ADC:ch_addr_0\[15]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:datab_5\[280] = \ADC:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:datab_4\[281] = \ADC:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:datab_3\[282] = \ADC:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:datab_2\[283] = \ADC:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:datab_1\[284] = \ADC:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:datab_0\[285] = \ADC:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:a_5\[286] = \ADC:ch_addr_5\[5]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:a_4\[287] = \ADC:ch_addr_4\[7]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:a_3\[288] = \ADC:ch_addr_3\[9]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:a_2\[289] = \ADC:ch_addr_2\[11]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:a_1\[290] = \ADC:ch_addr_1\[13]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:a_0\[291] = \ADC:ch_addr_0\[15]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:b_5\[292] = \ADC:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:b_4\[293] = \ADC:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:b_3\[294] = \ADC:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:b_2\[295] = \ADC:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:b_1\[296] = \ADC:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:b_0\[297] = \ADC:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\[304] = one[204]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:eq_0\[305] = \ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\[303]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:eqi_0\[311] = \ADC:MODULE_1:g1:a0:gx:u0:eq_5\[310]
Removing Rhs of wire \ADC:MODULE_1:g1:a0:xeq\[339] = \ADC:MODULE_1:g1:a0:gx:u0:aeqb_1\[312]
Removing Lhs of wire tmpOE__SW_net_0[354] = one[204]
Removing Lhs of wire tmpOE__VRx_net_0[360] = one[204]
Removing Lhs of wire \UART:Net_61\[370] = \UART:Net_9\[369]
Removing Lhs of wire \UART:BUART:tx_hd_send_break\[374] = zero[164]
Removing Lhs of wire \UART:BUART:FinalParityType_1\[376] = zero[164]
Removing Lhs of wire \UART:BUART:FinalParityType_0\[377] = zero[164]
Removing Lhs of wire \UART:BUART:tx_ctrl_mark\[381] = zero[164]
Removing Rhs of wire \UART:BUART:tx_bitclk_enable_pre\[392] = \UART:BUART:tx_bitclk_dp\[428]
Removing Lhs of wire \UART:BUART:tx_counter_tc\[438] = \UART:BUART:tx_counter_dp\[429]
Removing Lhs of wire \UART:BUART:tx_status_6\[439] = zero[164]
Removing Lhs of wire \UART:BUART:tx_status_5\[440] = zero[164]
Removing Lhs of wire \UART:BUART:tx_status_4\[441] = zero[164]
Removing Lhs of wire \UART:BUART:tx_status_1\[443] = \UART:BUART:tx_fifo_empty\[406]
Removing Lhs of wire \UART:BUART:tx_status_3\[445] = \UART:BUART:tx_fifo_notfull\[405]
Removing Lhs of wire tmpOE__Rx_1_net_0[453] = one[204]
Removing Lhs of wire tmpOE__Tx_1_net_0[459] = one[204]
Removing Lhs of wire tmpOE__VRy_net_0[465] = one[204]
Removing Lhs of wire tmpOE__TX_net_0[481] = one[204]
Removing Lhs of wire tmpOE__RX_net_0[487] = one[204]
Removing Lhs of wire \PWM_L1:PWMUDB:ctrl_enable\[505] = \PWM_L1:PWMUDB:control_7\[497]
Removing Lhs of wire \PWM_L1:PWMUDB:hwCapture\[515] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:hwEnable\[516] = \PWM_L1:PWMUDB:control_7\[497]
Removing Lhs of wire \PWM_L1:PWMUDB:trig_out\[520] = one[204]
Removing Lhs of wire \PWM_L1:PWMUDB:runmode_enable\\R\[522] = zero[164]
Removing Lhs of wire Net_4235[523] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:runmode_enable\\S\[524] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:final_enable\[525] = \PWM_L1:PWMUDB:runmode_enable\[521]
Removing Lhs of wire \PWM_L1:PWMUDB:ltch_kill_reg\\R\[529] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:ltch_kill_reg\\S\[530] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:min_kill_reg\\R\[531] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:min_kill_reg\\S\[532] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:final_kill\[535] = one[204]
Removing Lhs of wire \PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_1\[539] = \PWM_L1:PWMUDB:MODULE_2:g2:a0:s_1\[778]
Removing Lhs of wire \PWM_L1:PWMUDB:add_vi_vv_MODGEN_2_0\[541] = \PWM_L1:PWMUDB:MODULE_2:g2:a0:s_0\[779]
Removing Lhs of wire \PWM_L1:PWMUDB:dith_count_1\\R\[542] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:dith_count_1\\S\[543] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:dith_count_0\\R\[544] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:dith_count_0\\S\[545] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:status_6\[548] = zero[164]
Removing Rhs of wire \PWM_L1:PWMUDB:status_5\[549] = \PWM_L1:PWMUDB:final_kill_reg\[563]
Removing Lhs of wire \PWM_L1:PWMUDB:status_4\[550] = zero[164]
Removing Rhs of wire \PWM_L1:PWMUDB:status_3\[551] = \PWM_L1:PWMUDB:fifo_full\[570]
Removing Rhs of wire \PWM_L1:PWMUDB:status_1\[553] = \PWM_L1:PWMUDB:cmp2_status_reg\[562]
Removing Rhs of wire \PWM_L1:PWMUDB:status_0\[554] = \PWM_L1:PWMUDB:cmp1_status_reg\[561]
Removing Lhs of wire \PWM_L1:PWMUDB:cmp2_status\[559] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:cmp2\[560] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:cmp1_status_reg\\R\[564] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:cmp1_status_reg\\S\[565] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:cmp2_status_reg\\R\[566] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:cmp2_status_reg\\S\[567] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:final_kill_reg\\R\[568] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:final_kill_reg\\S\[569] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:cs_addr_2\[571] = \PWM_L1:PWMUDB:tc_i\[527]
Removing Lhs of wire \PWM_L1:PWMUDB:cs_addr_1\[572] = \PWM_L1:PWMUDB:runmode_enable\[521]
Removing Lhs of wire \PWM_L1:PWMUDB:cs_addr_0\[573] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:compare1\[606] = \PWM_L1:PWMUDB:cmp1_less\[577]
Removing Lhs of wire \PWM_L1:PWMUDB:pwm1_i\[611] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:pwm2_i\[613] = zero[164]
Removing Rhs of wire \PWM_L1:Net_96\[616] = \PWM_L1:PWMUDB:pwm_i_reg\[608]
Removing Lhs of wire \PWM_L1:PWMUDB:pwm_temp\[619] = \PWM_L1:PWMUDB:cmp1\[557]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_23\[660] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_22\[661] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_21\[662] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_20\[663] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_19\[664] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_18\[665] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_17\[666] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_16\[667] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_15\[668] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_14\[669] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_13\[670] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_12\[671] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_11\[672] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_10\[673] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_9\[674] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_8\[675] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_7\[676] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_6\[677] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_5\[678] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_4\[679] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_3\[680] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_2\[681] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_1\[682] = \PWM_L1:PWMUDB:MODIN3_1\[683]
Removing Lhs of wire \PWM_L1:PWMUDB:MODIN3_1\[683] = \PWM_L1:PWMUDB:dith_count_1\[538]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:a_0\[684] = \PWM_L1:PWMUDB:MODIN3_0\[685]
Removing Lhs of wire \PWM_L1:PWMUDB:MODIN3_0\[685] = \PWM_L1:PWMUDB:dith_count_0\[540]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[817] = one[204]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[818] = one[204]
Removing Rhs of wire Net_5706[819] = \PWM_L1:Net_96\[616]
Removing Lhs of wire tmpOE__LED1_net_0[827] = one[204]
Removing Rhs of wire Net_5622[828] = \mux_1:tmp__mux_1_reg\[1214]
Removing Lhs of wire \PWM_L2:PWMUDB:ctrl_enable\[846] = \PWM_L2:PWMUDB:control_7\[838]
Removing Lhs of wire \PWM_L2:PWMUDB:hwCapture\[856] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:hwEnable\[857] = \PWM_L2:PWMUDB:control_7\[838]
Removing Lhs of wire \PWM_L2:PWMUDB:trig_out\[861] = one[204]
Removing Lhs of wire \PWM_L2:PWMUDB:runmode_enable\\R\[863] = zero[164]
Removing Lhs of wire Net_5235[864] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:runmode_enable\\S\[865] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:final_enable\[866] = \PWM_L2:PWMUDB:runmode_enable\[862]
Removing Lhs of wire \PWM_L2:PWMUDB:ltch_kill_reg\\R\[870] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:ltch_kill_reg\\S\[871] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:min_kill_reg\\R\[872] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:min_kill_reg\\S\[873] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:final_kill\[876] = one[204]
Removing Lhs of wire \PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_1\[880] = \PWM_L2:PWMUDB:MODULE_3:g2:a0:s_1\[1167]
Removing Lhs of wire \PWM_L2:PWMUDB:add_vi_vv_MODGEN_3_0\[882] = \PWM_L2:PWMUDB:MODULE_3:g2:a0:s_0\[1168]
Removing Lhs of wire \PWM_L2:PWMUDB:dith_count_1\\R\[883] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:dith_count_1\\S\[884] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:dith_count_0\\R\[885] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:dith_count_0\\S\[886] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:status_6\[889] = zero[164]
Removing Rhs of wire \PWM_L2:PWMUDB:status_5\[890] = \PWM_L2:PWMUDB:final_kill_reg\[904]
Removing Lhs of wire \PWM_L2:PWMUDB:status_4\[891] = zero[164]
Removing Rhs of wire \PWM_L2:PWMUDB:status_3\[892] = \PWM_L2:PWMUDB:fifo_full\[911]
Removing Rhs of wire \PWM_L2:PWMUDB:status_1\[894] = \PWM_L2:PWMUDB:cmp2_status_reg\[903]
Removing Rhs of wire \PWM_L2:PWMUDB:status_0\[895] = \PWM_L2:PWMUDB:cmp1_status_reg\[902]
Removing Lhs of wire \PWM_L2:PWMUDB:cmp2_status\[900] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:cmp2\[901] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:cmp1_status_reg\\R\[905] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:cmp1_status_reg\\S\[906] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:cmp2_status_reg\\R\[907] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:cmp2_status_reg\\S\[908] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:final_kill_reg\\R\[909] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:final_kill_reg\\S\[910] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:cs_addr_2\[912] = \PWM_L2:PWMUDB:tc_i\[868]
Removing Lhs of wire \PWM_L2:PWMUDB:cs_addr_1\[913] = \PWM_L2:PWMUDB:runmode_enable\[862]
Removing Lhs of wire \PWM_L2:PWMUDB:cs_addr_0\[914] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:compare1\[995] = \PWM_L2:PWMUDB:cmp1_less\[966]
Removing Lhs of wire \PWM_L2:PWMUDB:pwm1_i\[1000] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:pwm2_i\[1002] = zero[164]
Removing Rhs of wire \PWM_L2:Net_96\[1005] = \PWM_L2:PWMUDB:pwm_i_reg\[997]
Removing Lhs of wire \PWM_L2:PWMUDB:pwm_temp\[1008] = \PWM_L2:PWMUDB:cmp1\[898]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_23\[1049] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_22\[1050] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_21\[1051] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_20\[1052] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_19\[1053] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_18\[1054] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_17\[1055] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_16\[1056] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_15\[1057] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_14\[1058] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_13\[1059] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_12\[1060] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_11\[1061] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_10\[1062] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_9\[1063] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_8\[1064] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_7\[1065] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_6\[1066] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_5\[1067] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_4\[1068] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_3\[1069] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_2\[1070] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_1\[1071] = \PWM_L2:PWMUDB:MODIN4_1\[1072]
Removing Lhs of wire \PWM_L2:PWMUDB:MODIN4_1\[1072] = \PWM_L2:PWMUDB:dith_count_1\[879]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:a_0\[1073] = \PWM_L2:PWMUDB:MODIN4_0\[1074]
Removing Lhs of wire \PWM_L2:PWMUDB:MODIN4_0\[1074] = \PWM_L2:PWMUDB:dith_count_0\[881]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_0\[1206] = one[204]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\[1207] = one[204]
Removing Rhs of wire Net_5619[1208] = \PWM_L2:Net_96\[1005]
Removing Rhs of wire Net_6160[1215] = \Control_LED1:control_out_0\[1218]
Removing Rhs of wire Net_6160[1215] = \Control_LED1:control_0\[1241]
Removing Lhs of wire \Control_LED1:clk\[1216] = zero[164]
Removing Lhs of wire \Control_LED1:rst\[1217] = zero[164]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_old_id_5\\D\[1242] = \ADC:ch_addr_5\[5]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_old_id_4\\D\[1243] = \ADC:ch_addr_4\[7]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_old_id_3\\D\[1244] = \ADC:ch_addr_3\[9]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_old_id_2\\D\[1245] = \ADC:ch_addr_2\[11]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_old_id_1\\D\[1246] = \ADC:ch_addr_1\[13]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_old_id_0\\D\[1247] = \ADC:ch_addr_0\[15]
Removing Lhs of wire \ADC:bSAR_SEQ:nrq_edge_detect_reg\\D\[1312] = \ADC:bSAR_SEQ:nrq_edge_detect\[226]
Removing Lhs of wire \ADC:bSAR_SEQ:nrq_reg\\D\[1314] = \ADC:bSAR_SEQ:bus_clk_nrq_reg\[223]
Removing Lhs of wire \UART:BUART:reset_reg\\D\[1315] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:min_kill_reg\\D\[1325] = one[204]
Removing Lhs of wire \PWM_L1:PWMUDB:prevCapture\\D\[1326] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:trig_last\\D\[1327] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:ltch_kill_reg\\D\[1330] = one[204]
Removing Lhs of wire \PWM_L1:PWMUDB:prevCompare1\\D\[1333] = \PWM_L1:PWMUDB:cmp1\[557]
Removing Lhs of wire \PWM_L1:PWMUDB:cmp1_status_reg\\D\[1334] = \PWM_L1:PWMUDB:cmp1_status\[558]
Removing Lhs of wire \PWM_L1:PWMUDB:cmp2_status_reg\\D\[1335] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:pwm_i_reg\\D\[1337] = \PWM_L1:PWMUDB:pwm_i\[609]
Removing Lhs of wire \PWM_L1:PWMUDB:pwm1_i_reg\\D\[1338] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:pwm2_i_reg\\D\[1339] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:tc_i_reg\\D\[1340] = \PWM_L1:PWMUDB:status_2\[552]
Removing Lhs of wire \PWM_L2:PWMUDB:min_kill_reg\\D\[1341] = one[204]
Removing Lhs of wire \PWM_L2:PWMUDB:prevCapture\\D\[1342] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:trig_last\\D\[1343] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:ltch_kill_reg\\D\[1346] = one[204]
Removing Lhs of wire \PWM_L2:PWMUDB:prevCompare1\\D\[1349] = \PWM_L2:PWMUDB:cmp1\[898]
Removing Lhs of wire \PWM_L2:PWMUDB:cmp1_status_reg\\D\[1350] = \PWM_L2:PWMUDB:cmp1_status\[899]
Removing Lhs of wire \PWM_L2:PWMUDB:cmp2_status_reg\\D\[1351] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:pwm_i_reg\\D\[1353] = \PWM_L2:PWMUDB:pwm_i\[998]
Removing Lhs of wire \PWM_L2:PWMUDB:pwm1_i_reg\\D\[1354] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:pwm2_i_reg\\D\[1355] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:tc_i_reg\\D\[1356] = \PWM_L2:PWMUDB:status_2\[893]

------------------------------------------------------
Aliased 0 equations, 278 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'one' (cost = 0):
one <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC:ch_addr_4\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_4\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC:ch_addr_1\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_1\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:cmp1\' (cost = 0):
\PWM_L1:PWMUDB:cmp1\ <= (\PWM_L1:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_L1:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_0\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_0\ <= (not \PWM_L1:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_L1:PWMUDB:dith_count_1\ and \PWM_L1:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:cmp1\' (cost = 0):
\PWM_L2:PWMUDB:cmp1\ <= (\PWM_L2:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_L2:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_0\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_0\ <= (not \PWM_L2:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_L2:PWMUDB:dith_count_1\ and \PWM_L2:PWMUDB:dith_count_0\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC:MODULE_1:g1:a0:xeq\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_1\' (cost = 2):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:s_1\ <= ((not \PWM_L1:PWMUDB:dith_count_0\ and \PWM_L1:PWMUDB:dith_count_1\)
	OR (not \PWM_L1:PWMUDB:dith_count_1\ and \PWM_L1:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_1\' (cost = 2):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:s_1\ <= ((not \PWM_L2:PWMUDB:dith_count_0\ and \PWM_L2:PWMUDB:dith_count_1\)
	OR (not \PWM_L2:PWMUDB:dith_count_1\ and \PWM_L2:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;


Substituting virtuals - pass 3:

Note:  Virtual signal \ADC:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC:AMuxHw_2_Decoder_is_active\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;


Substituting virtuals - pass 4:

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;


Substituting virtuals - pass 5:

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;


Substituting virtuals - pass 6:

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;


Substituting virtuals - pass 7:

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;


Substituting virtuals - pass 8:


----------------------------------------------------------
Circuit simplification results:

	Expanded 70 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \PWM_L1:PWMUDB:final_capture\ to zero
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \PWM_L2:PWMUDB:final_capture\ to zero
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \PWM_L1:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \PWM_L2:PWMUDB:final_kill_reg\\D\ to zero
Removing Lhs of wire \PWM_L1:PWMUDB:final_capture\[575] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\[788] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\[798] = zero[164]
Removing Lhs of wire \PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\[808] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:final_capture\[916] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_24\[1177] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_16\[1187] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_8\[1197] = zero[164]
Removing Lhs of wire \UART:BUART:tx_ctrl_mark_last\\D\[1322] = \UART:BUART:tx_ctrl_mark_last\[449]
Removing Lhs of wire \PWM_L1:PWMUDB:runmode_enable\\D\[1328] = \PWM_L1:PWMUDB:control_7\[497]
Removing Lhs of wire \PWM_L1:PWMUDB:final_kill_reg\\D\[1336] = zero[164]
Removing Lhs of wire \PWM_L2:PWMUDB:runmode_enable\\D\[1344] = \PWM_L2:PWMUDB:control_7\[838]
Removing Lhs of wire \PWM_L2:PWMUDB:final_kill_reg\\D\[1352] = zero[164]

------------------------------------------------------
Aliased 0 equations, 13 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\PSoC_5_QPN_Remote_Control.cyprj -dcpsoc3 PSoC_5_QPN_Remote_Control.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 1s.531ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.0.0.432, Family: PSoC3, Started at: Wednesday, 29 March 2017 18:26:49
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\PSoC_5_QPN_Remote_Control.cyprj -d CY8C5888LTI-LP097 PSoC_5_QPN_Remote_Control.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.031ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC:MODULE_1:g1:a0:gx:u0:gt_2\
    Removed wire end \PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_L1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_L2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Converted constant MacroCell: \UART:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_L1:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_L1:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_L1:PWMUDB:status_1\ from registered to combinatorial
    Converted constant MacroCell: \PWM_L1:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_L1:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_L1:PWMUDB:pwm2_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_L2:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_L2:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_L2:PWMUDB:status_1\ from registered to combinatorial
    Converted constant MacroCell: \PWM_L2:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_L2:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_L2:PWMUDB:pwm2_i_reg\ from registered to combinatorial
Assigning clock ADC_BusClock to clock BUS_CLK because it is a pass-through
Assigning clock CAN_Clock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'Clock_1'. Fanout=1, Signal=Net_150
    Digital Clock 1: Automatic-assigning  clock 'ADC_IntClock'. Fanout=73, Signal=\ADC:clock\
    Digital Clock 2: Automatic-assigning  clock 'UART_IntClock'. Fanout=1, Signal=\UART:Net_9\
    Digital Clock 3: Automatic-assigning  clock 'Clock_2'. Fanout=1, Signal=Net_4236
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \ADC:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_IntClock, EnableOut: \ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \UART:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \PWM_L1:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_2 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_2, EnableOut: Constant 1
    UDB Clk/Enable \PWM_L2:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_1 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_1, EnableOut: Constant 1
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \UART:BUART:tx_parity_bit\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_parity_bit\ (fanout=0)

    Removing \UART:BUART:tx_mark\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_mark\ (fanout=0)


Removing unused cells resulting from optimization
Done removing unused cells.
End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = SW(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => SW(0)__PA ,
            annotation => Net_788 ,
            pad => SW(0)_PAD );
        Properties:
        {
        }

    Pin : Name = VRx(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => VRx(0)__PA ,
            analog_term => Net_1560 ,
            pad => VRx(0)_PAD ,
            input => \ADC:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = Rx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Rx_1(0)__PA ,
            pad => Rx_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Tx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Tx_1(0)__PA ,
            input => Net_834 ,
            pad => Tx_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = VRy(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => VRy(0)__PA ,
            analog_term => Net_3442 ,
            pad => VRy(0)_PAD ,
            input => \ADC:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = TX(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => TX(0)__PA ,
            input => Net_12 ,
            pad => TX(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RX(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RX(0)__PA ,
            fb => Net_11 ,
            pad => RX(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED1(0)__PA ,
            input => Net_5622 ,
            pad => LED1(0)_PAD );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC:AMuxHw_2_Decoder_old_id_5\ * !\ADC:ch_addr_5\
            + \ADC:AMuxHw_2_Decoder_old_id_4\ * !\ADC:ch_addr_4\
            + \ADC:AMuxHw_2_Decoder_old_id_3\ * !\ADC:ch_addr_3\
            + \ADC:AMuxHw_2_Decoder_old_id_2\ * !\ADC:ch_addr_2\
            + !\ADC:AMuxHw_2_Decoder_old_id_1\ * \ADC:ch_addr_1\
            + \ADC:AMuxHw_2_Decoder_old_id_1\ * !\ADC:ch_addr_1\
            + !\ADC:AMuxHw_2_Decoder_old_id_0\ * \ADC:ch_addr_0\
            + \ADC:AMuxHw_2_Decoder_old_id_0\ * !\ADC:ch_addr_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * \ADC:ch_addr_5\
            + !\ADC:AMuxHw_2_Decoder_old_id_4\ * \ADC:ch_addr_4\
            + !\ADC:AMuxHw_2_Decoder_old_id_3\ * \ADC:ch_addr_3\
            + !\ADC:AMuxHw_2_Decoder_old_id_2\ * \ADC:ch_addr_2\
            + \ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_3440 * !\ADC:bSAR_SEQ:load_period\
        );
        Output = \ADC:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=Net_834, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:txn\
        );
        Output = Net_834 (fanout=1)

    MacroCell: Name=\UART:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\UART:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\UART:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_fifo_notfull\
        );
        Output = \UART:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\PWM_L1:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L1:PWMUDB:runmode_enable\ * \PWM_L1:PWMUDB:tc_i\
        );
        Output = \PWM_L1:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\PWM_L2:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L2:PWMUDB:runmode_enable\ * \PWM_L2:PWMUDB:tc_i\
        );
        Output = \PWM_L2:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=Net_5622, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_5706 * !Net_6160
            + Net_5619 * Net_6160
        );
        Output = Net_5622 (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_5\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_4\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_3\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_2\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_1\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_3441, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !\ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_3441 (fanout=3)

    MacroCell: Name=\ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_3441
            + \ADC:Net_3935\
        );
        Output = \ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\UART:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART:BUART:txn\ * \UART:BUART:tx_state_1\ * 
              !\UART:BUART:tx_bitclk\
            + \UART:BUART:txn\ * \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * !\UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\ * 
              !\UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:txn\ (fanout=2)

    MacroCell: Name=\UART:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\UART:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * !\UART:BUART:tx_fifo_empty\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_fifo_empty\ * !\UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\UART:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\UART:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\PWM_L1:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4236) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L1:PWMUDB:control_7\
        );
        Output = \PWM_L1:PWMUDB:runmode_enable\ (fanout=3)

    MacroCell: Name=\PWM_L1:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4236) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L1:PWMUDB:cmp1_less\
        );
        Output = \PWM_L1:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_L1:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4236) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_L1:PWMUDB:prevCompare1\ * \PWM_L1:PWMUDB:cmp1_less\
        );
        Output = \PWM_L1:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=Net_5706, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4236) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L1:PWMUDB:runmode_enable\ * \PWM_L1:PWMUDB:cmp1_less\
        );
        Output = Net_5706 (fanout=1)

    MacroCell: Name=\PWM_L2:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_150) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L2:PWMUDB:control_7\
        );
        Output = \PWM_L2:PWMUDB:runmode_enable\ (fanout=4)

    MacroCell: Name=\PWM_L2:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_150) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L2:PWMUDB:cmp1_less\
        );
        Output = \PWM_L2:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_L2:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_150) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_L2:PWMUDB:prevCompare1\ * \PWM_L2:PWMUDB:cmp1_less\
        );
        Output = \PWM_L2:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=Net_5619, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_150) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L2:PWMUDB:runmode_enable\ * \PWM_L2:PWMUDB:cmp1_less\
        );
        Output = Net_5619 (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\UART:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_2 => \UART:BUART:tx_state_1\ ,
            cs_addr_1 => \UART:BUART:tx_state_0\ ,
            cs_addr_0 => \UART:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \UART:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \UART:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \UART:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_0 => \UART:BUART:counter_load_not\ ,
            ce0_reg => \UART:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \UART:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\PWM_L1:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => Net_4236 ,
            cs_addr_2 => \PWM_L1:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_L1:PWMUDB:runmode_enable\ ,
            cl0_comb => \PWM_L1:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_L1:PWMUDB:tc_i\ ,
            f1_blk_stat_comb => \PWM_L1:PWMUDB:status_3\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\PWM_L2:PWMUDB:sP16:pwmdp:u0\
        PORT MAP (
            clock => Net_150 ,
            cs_addr_2 => \PWM_L2:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_L2:PWMUDB:runmode_enable\ ,
            chain_out => \PWM_L2:PWMUDB:sP16:pwmdp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Next in chain : \PWM_L2:PWMUDB:sP16:pwmdp:u1\

    datapathcell: Name =\PWM_L2:PWMUDB:sP16:pwmdp:u1\
        PORT MAP (
            clock => Net_150 ,
            cs_addr_2 => \PWM_L2:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_L2:PWMUDB:runmode_enable\ ,
            cl0_comb => \PWM_L2:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_L2:PWMUDB:tc_i\ ,
            f1_blk_stat_comb => \PWM_L2:PWMUDB:status_3\ ,
            chain_in => \PWM_L2:PWMUDB:sP16:pwmdp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101011110000000000000100000011110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \PWM_L2:PWMUDB:sP16:pwmdp:u0\
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC:clock\ ,
            status_0 => Net_3441 ,
            clk_en => \ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\UART:BUART:sTX:TxSts\
        PORT MAP (
            clock => \UART:Net_9\ ,
            status_3 => \UART:BUART:tx_fifo_notfull\ ,
            status_2 => \UART:BUART:tx_status_2\ ,
            status_1 => \UART:BUART:tx_fifo_empty\ ,
            status_0 => \UART:BUART:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\PWM_L1:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => Net_4236 ,
            status_3 => \PWM_L1:PWMUDB:status_3\ ,
            status_2 => \PWM_L1:PWMUDB:status_2\ ,
            status_0 => \PWM_L1:PWMUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\PWM_L2:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => Net_150 ,
            status_3 => \PWM_L2:PWMUDB:status_3\ ,
            status_2 => \PWM_L2:PWMUDB:status_2\ ,
            status_0 => \PWM_L2:PWMUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC:nrq\ ,
            out => \ADC:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\ADC:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC:clock\ ,
            control_7 => \ADC:bSAR_SEQ:control_7\ ,
            control_6 => \ADC:bSAR_SEQ:control_6\ ,
            control_5 => \ADC:bSAR_SEQ:control_5\ ,
            control_4 => \ADC:bSAR_SEQ:control_4\ ,
            control_3 => \ADC:bSAR_SEQ:control_3\ ,
            control_2 => \ADC:bSAR_SEQ:control_2\ ,
            control_1 => \ADC:bSAR_SEQ:load_period\ ,
            control_0 => \ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\PWM_L1:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => Net_4236 ,
            control_7 => \PWM_L1:PWMUDB:control_7\ ,
            control_6 => \PWM_L1:PWMUDB:control_6\ ,
            control_5 => \PWM_L1:PWMUDB:control_5\ ,
            control_4 => \PWM_L1:PWMUDB:control_4\ ,
            control_3 => \PWM_L1:PWMUDB:control_3\ ,
            control_2 => \PWM_L1:PWMUDB:control_2\ ,
            control_1 => \PWM_L1:PWMUDB:control_1\ ,
            control_0 => \PWM_L1:PWMUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\PWM_L2:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => Net_150 ,
            control_7 => \PWM_L2:PWMUDB:control_7\ ,
            control_6 => \PWM_L2:PWMUDB:control_6\ ,
            control_5 => \PWM_L2:PWMUDB:control_5\ ,
            control_4 => \PWM_L2:PWMUDB:control_4\ ,
            control_3 => \PWM_L2:PWMUDB:control_3\ ,
            control_2 => \PWM_L2:PWMUDB:control_2\ ,
            control_1 => \PWM_L2:PWMUDB:control_1\ ,
            control_0 => \PWM_L2:PWMUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\Control_LED1:Sync:ctrl_reg\
        PORT MAP (
            control_7 => \Control_LED1:control_7\ ,
            control_6 => \Control_LED1:control_6\ ,
            control_5 => \Control_LED1:control_5\ ,
            control_4 => \Control_LED1:control_4\ ,
            control_3 => \Control_LED1:control_3\ ,
            control_2 => \Control_LED1:control_2\ ,
            control_1 => \Control_LED1:control_1\ ,
            control_0 => Net_6160 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\ADC:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC:clock\ ,
            load => \ADC:bSAR_SEQ:load_period\ ,
            enable => \ADC:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC:bSAR_SEQ:count_6\ ,
            count_5 => \ADC:ch_addr_5\ ,
            count_4 => \ADC:ch_addr_4\ ,
            count_3 => \ADC:ch_addr_3\ ,
            count_2 => \ADC:ch_addr_2\ ,
            count_1 => \ADC:ch_addr_1\ ,
            count_0 => \ADC:ch_addr_0\ ,
            tc => \ADC:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000001"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC:TempBuf\
        PORT MAP (
            dmareq => \ADC:Net_3830\ ,
            termin => zero ,
            termout => \ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC:FinalBuf\
        PORT MAP (
            dmareq => \ADC:Net_3698\ ,
            termin => zero ,
            termout => \ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\ADC:IRQ\
        PORT MAP (
            interrupt => Net_3441 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\CAN:isr\
        PORT MAP (
            interrupt => Net_6281 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    4 :    4 :    8 : 50.00 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    2 :   30 :   32 :  6.25 %
IO                            :   13 :   35 :   48 : 27.08 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    1 :    0 :    1 : 100.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :   96 :   96 :  192 : 50.00 %
  Unique P-terms              :  120 :  264 :  384 : 31.25 %
  Total P-terms               :  123 :      :      :        
  Datapath Cells              :    5 :   19 :   24 : 20.83 %
  Status Cells                :    6 :   18 :   24 : 25.00 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    3 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    1 :      :      :        
  Control Cells               :    5 :   19 :   24 : 20.83 %
    Control Registers         :    4 :      :      :        
    Count7 Cells              :    1 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.125ms
Tech Mapping phase: Elapsed time ==> 0s.187ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_3444" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3445" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3447" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3449" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3450" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3452" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3454" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3455" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3457" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3459" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3460" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3462" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3464" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3465" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3467" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3469" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3470" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3472" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3474" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3475" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3477" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3479" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3480" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3482" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3484" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3485" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3487" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3489" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3490" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3492" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3494" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3495" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3497" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3499" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3500" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3502" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3504" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3505" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3507" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3509" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3510" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3512" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3514" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3515" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3517" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3519" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3520" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3521" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3522" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3523" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3524" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3525" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3526" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3527" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3528" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3529" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3530" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3531" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3532" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3533" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3534" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_3535" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_1@[IOP=(2)][IoId=(1)] : LED1(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : RX(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : Rx_1(0) (fixed)
IO_5@[IOP=(1)][IoId=(5)] : SW(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : TX(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_1(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : VRx(0) (fixed)
IO_6@[IOP=(1)][IoId=(6)] : VRy(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \ADC:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC:SAR:vRef_Vdda_1\
Log: apr.M0058: The analog placement iterative improvement is 47% done. (App=cydsfit)
Analog Placement Results:
IO_1@[IOP=(2)][IoId=(1)] : LED1(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : RX(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : Rx_1(0) (fixed)
IO_5@[IOP=(1)][IoId=(5)] : SW(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : TX(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_1(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : VRx(0) (fixed)
IO_6@[IOP=(1)][IoId=(6)] : VRy(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \ADC:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC:SAR:vRef_Vdda_1\

Analog Placement phase: Elapsed time ==> 2s.421ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ADC:Net_2803\ {
    sar_1_vplus
  }
  Net: Net_1560 {
    p1_7
  }
  Net: Net_3442 {
    p1_6
  }
  Net: Net_3444 {
  }
  Net: Net_3445 {
  }
  Net: Net_3447 {
  }
  Net: Net_3449 {
  }
  Net: Net_3450 {
  }
  Net: Net_3452 {
  }
  Net: Net_3454 {
  }
  Net: Net_3455 {
  }
  Net: Net_3457 {
  }
  Net: Net_3459 {
  }
  Net: Net_3460 {
  }
  Net: Net_3462 {
  }
  Net: Net_3464 {
  }
  Net: Net_3465 {
  }
  Net: Net_3467 {
  }
  Net: Net_3469 {
  }
  Net: Net_3470 {
  }
  Net: Net_3472 {
  }
  Net: Net_3474 {
  }
  Net: Net_3475 {
  }
  Net: Net_3477 {
  }
  Net: Net_3479 {
  }
  Net: Net_3480 {
  }
  Net: Net_3482 {
  }
  Net: Net_3484 {
  }
  Net: Net_3485 {
  }
  Net: Net_3487 {
  }
  Net: Net_3489 {
  }
  Net: Net_3490 {
  }
  Net: Net_3492 {
  }
  Net: Net_3494 {
  }
  Net: Net_3495 {
  }
  Net: Net_3497 {
  }
  Net: Net_3499 {
  }
  Net: Net_3500 {
  }
  Net: Net_3502 {
  }
  Net: Net_3504 {
  }
  Net: Net_3505 {
  }
  Net: Net_3507 {
  }
  Net: Net_3509 {
  }
  Net: Net_3510 {
  }
  Net: Net_3512 {
  }
  Net: Net_3514 {
  }
  Net: Net_3515 {
  }
  Net: Net_3517 {
  }
  Net: Net_3519 {
  }
  Net: Net_3520 {
  }
  Net: Net_3521 {
  }
  Net: Net_3522 {
  }
  Net: Net_3523 {
  }
  Net: Net_3524 {
  }
  Net: Net_3525 {
  }
  Net: Net_3526 {
  }
  Net: Net_3527 {
  }
  Net: Net_3528 {
  }
  Net: Net_3529 {
  }
  Net: Net_3530 {
  }
  Net: Net_3531 {
  }
  Net: Net_3532 {
  }
  Net: Net_3533 {
  }
  Net: Net_3534 {
  }
  Net: Net_3535 {
  }
  Net: \ADC:SAR:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \ADC:SAR:Net_209\ {
  }
  Net: \ADC:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2
    sar_1_vref_vdda_vdda_2
    sar_1_vref_x_sar_1_vref_vdda_vdda_2
    sar_1_vref
  }
  Net: AmuxNet::\ADC:AMuxHw_2\ {
    sar_1_vplus
    agr3_x_sar_1_vplus
    agr3
    agr3_x_p1_7
    agr2_x_sar_1_vplus
    agr2
    agr2_x_p1_6
    p1_7
    p1_6
  }
}
Map of item to net {
  sar_1_vrefhi                                     -> \ADC:SAR:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \ADC:SAR:Net_126\
  sar_1_vminus                                     -> \ADC:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \ADC:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2  -> \ADC:SAR:Net_235\
  sar_1_vref_vdda_vdda_2                           -> \ADC:SAR:Net_235\
  sar_1_vref_x_sar_1_vref_vdda_vdda_2              -> \ADC:SAR:Net_235\
  sar_1_vref                                       -> \ADC:SAR:Net_235\
  sar_1_vplus                                      -> \ADC:Net_2803\
  p1_7                                             -> Net_1560
  p1_6                                             -> Net_3442
  agr3_x_sar_1_vplus                               -> AmuxNet::\ADC:AMuxHw_2\
  agr3                                             -> AmuxNet::\ADC:AMuxHw_2\
  agr3_x_p1_7                                      -> AmuxNet::\ADC:AMuxHw_2\
  agr2_x_sar_1_vplus                               -> AmuxNet::\ADC:AMuxHw_2\
  agr2                                             -> AmuxNet::\ADC:AMuxHw_2\
  agr2_x_p1_6                                      -> AmuxNet::\ADC:AMuxHw_2\
}
Mux Info {
  Mux: \ADC:AMuxHw_2\ {
     Mouth: \ADC:Net_2803\
     Guts:  AmuxNet::\ADC:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_1560
      Outer: agr3_x_p1_7
      Inner: agr3_x_sar_1_vplus
      Path {
        p1_7
        agr3_x_p1_7
        agr3
        agr3_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 1 {
      Net:   Net_3442
      Outer: agr2_x_p1_6
      Inner: agr2_x_sar_1_vplus
      Path {
        p1_6
        agr2_x_p1_6
        agr2
        agr2_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 2 {
      Net:   Net_3444
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 3 {
      Net:   Net_3445
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_3447
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_3449
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_3450
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_3452
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_3454
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_3455
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_3457
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_3459
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_3460
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_3462
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_3464
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_3465
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_3467
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_3469
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_3470
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_3472
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_3474
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_3475
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_3477
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_3479
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_3480
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_3482
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_3484
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_3485
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_3487
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_3489
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_3490
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_3492
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_3494
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_3495
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_3497
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_3499
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_3500
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_3502
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_3504
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_3505
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_3507
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_3509
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_3510
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_3512
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_3514
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_3515
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_3517
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_3519
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_3520
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_3521
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_3522
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_3523
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_3524
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_3525
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_3526
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_3527
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_3528
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_3529
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_3530
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_3531
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_3532
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_3533
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_3534
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_3535
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = False
IsVddaHalfUsedForSar1 = True
Analog Code Generation phase: Elapsed time ==> 0s.331ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 3.1 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   28 :   20 :   48 :  58.33%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.11
                   Pterms :            4.39
               Macrocells :            3.43
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.062ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         14 :       8.50 :       6.86
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\ADC:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC:clock\ ,
        control_7 => \ADC:bSAR_SEQ:control_7\ ,
        control_6 => \ADC:bSAR_SEQ:control_6\ ,
        control_5 => \ADC:bSAR_SEQ:control_5\ ,
        control_4 => \ADC:bSAR_SEQ:control_4\ ,
        control_3 => \ADC:bSAR_SEQ:control_3\ ,
        control_2 => \ADC:bSAR_SEQ:control_2\ ,
        control_1 => \ADC:bSAR_SEQ:load_period\ ,
        control_0 => \ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=1, #inputs=3, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_3441
            + \ADC:Net_3935\
        );
        Output = \ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,4)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_3441, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !\ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_3441 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\PWM_L1:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => Net_4236 ,
        cs_addr_2 => \PWM_L1:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_L1:PWMUDB:runmode_enable\ ,
        cl0_comb => \PWM_L1:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_L1:PWMUDB:tc_i\ ,
        f1_blk_stat_comb => \PWM_L1:PWMUDB:status_3\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\Control_LED1:Sync:ctrl_reg\
    PORT MAP (
        control_7 => \Control_LED1:control_7\ ,
        control_6 => \Control_LED1:control_6\ ,
        control_5 => \Control_LED1:control_5\ ,
        control_4 => \Control_LED1:control_4\ ,
        control_3 => \Control_LED1:control_3\ ,
        control_2 => \Control_LED1:control_2\ ,
        control_1 => \Control_LED1:control_1\ ,
        control_0 => Net_6160 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

synccell: Name =\ADC:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC:nrq\ ,
        out => \ADC:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=2, #inputs=5, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\PWM_L1:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(0,5)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L1:PWMUDB:runmode_enable\ * \PWM_L1:PWMUDB:tc_i\
        );
        Output = \PWM_L1:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=Net_5622, Mode=(Combinatorial) @ [UDB=(0,5)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_5706 * !Net_6160
            + Net_5619 * Net_6160
        );
        Output = Net_5622 (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,5)][LB=1] #macrocells=4, #inputs=4, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=Net_5706, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4236) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L1:PWMUDB:runmode_enable\ * \PWM_L1:PWMUDB:cmp1_less\
        );
        Output = Net_5706 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_L1:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4236) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L1:PWMUDB:cmp1_less\
        );
        Output = \PWM_L1:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_L1:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4236) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_L1:PWMUDB:prevCompare1\ * \PWM_L1:PWMUDB:cmp1_less\
        );
        Output = \PWM_L1:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_L1:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4236) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L1:PWMUDB:control_7\
        );
        Output = \PWM_L1:PWMUDB:runmode_enable\ (fanout=3)
        Properties               : 
        {
        }
}

datapathcell: Name =\PWM_L2:PWMUDB:sP16:pwmdp:u0\
    PORT MAP (
        clock => Net_150 ,
        cs_addr_2 => \PWM_L2:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_L2:PWMUDB:runmode_enable\ ,
        chain_out => \PWM_L2:PWMUDB:sP16:pwmdp:carry\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Next in chain : \PWM_L2:PWMUDB:sP16:pwmdp:u1\

statusicell: Name =\PWM_L1:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => Net_4236 ,
        status_3 => \PWM_L1:PWMUDB:status_3\ ,
        status_2 => \PWM_L1:PWMUDB:status_2\ ,
        status_0 => \PWM_L1:PWMUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\PWM_L1:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => Net_4236 ,
        control_7 => \PWM_L1:PWMUDB:control_7\ ,
        control_6 => \PWM_L1:PWMUDB:control_6\ ,
        control_5 => \PWM_L1:PWMUDB:control_5\ ,
        control_4 => \PWM_L1:PWMUDB:control_4\ ,
        control_3 => \PWM_L1:PWMUDB:control_3\ ,
        control_2 => \PWM_L1:PWMUDB:control_2\ ,
        control_1 => \PWM_L1:PWMUDB:control_1\ ,
        control_0 => \PWM_L1:PWMUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_4\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_5\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC:AMuxHw_2_Decoder_old_id_5\ * !\ADC:ch_addr_5\
            + \ADC:AMuxHw_2_Decoder_old_id_4\ * !\ADC:ch_addr_4\
            + \ADC:AMuxHw_2_Decoder_old_id_3\ * !\ADC:ch_addr_3\
            + \ADC:AMuxHw_2_Decoder_old_id_2\ * !\ADC:ch_addr_2\
            + !\ADC:AMuxHw_2_Decoder_old_id_1\ * \ADC:ch_addr_1\
            + \ADC:AMuxHw_2_Decoder_old_id_1\ * !\ADC:ch_addr_1\
            + !\ADC:AMuxHw_2_Decoder_old_id_0\ * \ADC:ch_addr_0\
            + \ADC:AMuxHw_2_Decoder_old_id_0\ * !\ADC:ch_addr_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,1)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * \ADC:ch_addr_5\
            + !\ADC:AMuxHw_2_Decoder_old_id_4\ * \ADC:ch_addr_4\
            + !\ADC:AMuxHw_2_Decoder_old_id_3\ * \ADC:ch_addr_3\
            + !\ADC:AMuxHw_2_Decoder_old_id_2\ * \ADC:ch_addr_2\
            + \ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_1\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_3\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_2\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\ADC:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC:clock\ ,
        load => \ADC:bSAR_SEQ:load_period\ ,
        enable => \ADC:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC:bSAR_SEQ:count_6\ ,
        count_5 => \ADC:ch_addr_5\ ,
        count_4 => \ADC:ch_addr_4\ ,
        count_3 => \ADC:ch_addr_3\ ,
        count_2 => \ADC:ch_addr_2\ ,
        count_1 => \ADC:ch_addr_1\ ,
        count_0 => \ADC:ch_addr_0\ ,
        tc => \ADC:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000001"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=4, #inputs=10, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_fifo_notfull\
        );
        Output = \UART:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_3440 * !\ADC:bSAR_SEQ:load_period\
        );
        Output = \ADC:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,3)][LB=1] #macrocells=4, #inputs=11, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_0 => \UART:BUART:counter_load_not\ ,
        ce0_reg => \UART:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \UART:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\UART:BUART:sTX:TxSts\
    PORT MAP (
        clock => \UART:Net_9\ ,
        status_3 => \UART:BUART:tx_fifo_notfull\ ,
        status_2 => \UART:BUART:tx_status_2\ ,
        status_1 => \UART:BUART:tx_fifo_empty\ ,
        status_0 => \UART:BUART:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=2, #inputs=8, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:txn\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART:BUART:txn\ * \UART:BUART:tx_state_1\ * 
              !\UART:BUART:tx_bitclk\
            + \UART:BUART:txn\ * \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * !\UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\ * 
              !\UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,4)][LB=1] #macrocells=3, #inputs=7, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * !\UART:BUART:tx_fifo_empty\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_fifo_empty\ * !\UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=Net_834, Mode=(Combinatorial) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:txn\
        );
        Output = Net_834 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\UART:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_2 => \UART:BUART:tx_state_1\ ,
        cs_addr_1 => \UART:BUART:tx_state_0\ ,
        cs_addr_0 => \UART:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \UART:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \UART:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \UART:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statuscell: Name =\ADC:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC:clock\ ,
        status_0 => Net_3441 ,
        clk_en => \ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=3, #inputs=5, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\PWM_L2:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L2:PWMUDB:runmode_enable\ * \PWM_L2:PWMUDB:tc_i\
        );
        Output = \PWM_L2:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_L2:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_150) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_L2:PWMUDB:prevCompare1\ * \PWM_L2:PWMUDB:cmp1_less\
        );
        Output = \PWM_L2:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\PWM_L2:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_150) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L2:PWMUDB:control_7\
        );
        Output = \PWM_L2:PWMUDB:runmode_enable\ (fanout=4)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,5)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_5619, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_150) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L2:PWMUDB:runmode_enable\ * \PWM_L2:PWMUDB:cmp1_less\
        );
        Output = Net_5619 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\PWM_L2:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_150) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_L2:PWMUDB:cmp1_less\
        );
        Output = \PWM_L2:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\PWM_L2:PWMUDB:sP16:pwmdp:u1\
    PORT MAP (
        clock => Net_150 ,
        cs_addr_2 => \PWM_L2:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_L2:PWMUDB:runmode_enable\ ,
        cl0_comb => \PWM_L2:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_L2:PWMUDB:tc_i\ ,
        f1_blk_stat_comb => \PWM_L2:PWMUDB:status_3\ ,
        chain_in => \PWM_L2:PWMUDB:sP16:pwmdp:carry\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101011110000000000000100000011110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \PWM_L2:PWMUDB:sP16:pwmdp:u0\

statusicell: Name =\PWM_L2:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => Net_150 ,
        status_3 => \PWM_L2:PWMUDB:status_3\ ,
        status_2 => \PWM_L2:PWMUDB:status_2\ ,
        status_0 => \PWM_L2:PWMUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\PWM_L2:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => Net_150 ,
        control_7 => \PWM_L2:PWMUDB:control_7\ ,
        control_6 => \PWM_L2:PWMUDB:control_6\ ,
        control_5 => \PWM_L2:PWMUDB:control_5\ ,
        control_4 => \PWM_L2:PWMUDB:control_4\ ,
        control_3 => \PWM_L2:PWMUDB:control_3\ ,
        control_2 => \PWM_L2:PWMUDB:control_2\ ,
        control_1 => \PWM_L2:PWMUDB:control_1\ ,
        control_0 => \PWM_L2:PWMUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,0)] is empty.
UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,2)] is empty.
UDB [UDB=(2,3)] is empty.
UDB [UDB=(2,4)] is empty.
UDB [UDB=(2,5)] is empty.
UDB [UDB=(3,0)] is empty.
UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,2)] is empty.
UDB [UDB=(3,3)] is empty.
UDB [UDB=(3,4)] is empty.
UDB [UDB=(3,5)] is empty.
Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\ADC:IRQ\
        PORT MAP (
            interrupt => Net_3441 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(16)] 
    interrupt: Name =\CAN:isr\
        PORT MAP (
            interrupt => Net_6281 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC:FinalBuf\
        PORT MAP (
            dmareq => \ADC:Net_3698\ ,
            termin => zero ,
            termout => \ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC:TempBuf\
        PORT MAP (
            dmareq => \ADC:Net_3830\ ,
            termin => zero ,
            termout => \ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 is empty
Port 1 contains the following IO cells:
[IoId=5]: 
Pin : Name = SW(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => SW(0)__PA ,
        annotation => Net_788 ,
        pad => SW(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = VRy(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => VRy(0)__PA ,
        analog_term => Net_3442 ,
        pad => VRy(0)_PAD ,
        input => \ADC:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = VRx(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => VRx(0)__PA ,
        analog_term => Net_1560 ,
        pad => VRx(0)_PAD ,
        input => \ADC:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

Port 2 contains the following IO cells:
[IoId=1]: 
Pin : Name = LED1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED1(0)__PA ,
        input => Net_5622 ,
        pad => LED1(0)_PAD );
    Properties:
    {
    }

Port 3 contains the following IO cells:
[IoId=3]: 
Pin : Name = TX(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => TX(0)__PA ,
        input => Net_12 ,
        pad => TX(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = RX(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RX(0)__PA ,
        fb => Net_11 ,
        pad => RX(0)_PAD );
    Properties:
    {
    }

Port 12 contains the following IO cells:
[IoId=6]: 
Pin : Name = Rx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Rx_1(0)__PA ,
        pad => Rx_1(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Tx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Tx_1(0)__PA ,
        input => Net_834 ,
        pad => Tx_1(0)_PAD );
    Properties:
    {
    }

Port 15 is empty
ARM group 0: empty
CAN 2.0b group 0: 
    CAN Block @ F(CAN,0): 
    cancell: Name =\CAN:CanIP\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            can_rx => Net_11 ,
            can_tx => Net_12 ,
            can_tx_en => Net_6280 ,
            interrupt => Net_6281 );
        Properties:
        {
            cy_registers = ""
        }
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => Net_150 ,
            dclk_0 => Net_150_local ,
            dclk_glb_1 => \ADC:clock\ ,
            dclk_1 => \ADC:clock_local\ ,
            dclk_glb_2 => \UART:Net_9\ ,
            dclk_2 => \UART:Net_9_local\ ,
            dclk_glb_3 => Net_4236 ,
            dclk_3 => Net_4236_local );
        Properties:
        {
        }
Comparator group 0: empty
Digital Filter Block group 0: empty
Delta-Sigma ADC group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
Segment LCD group 0: empty
LVD group 0: empty
PM group 0: empty
Analog (SC/CT) Blocks group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: empty
VIDAC group 0: empty
Opamp group 0: empty
CapSense Buffers group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR ADC group 0: 
    SAR Block @ F(SAR,1): 
    sarcell: Name =\ADC:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC:Net_2803\ ,
            vminus => \ADC:SAR:Net_126\ ,
            ext_pin => \ADC:SAR:Net_209\ ,
            vrefhi_out => \ADC:SAR:Net_126\ ,
            vref => \ADC:SAR:Net_235\ ,
            clk_udb => \ADC:clock_local\ ,
            irq => \ADC:SAR:Net_252\ ,
            next => Net_3440 ,
            data_out_udb_11 => \ADC:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC:SAR:Net_207_0\ ,
            eof_udb => \ADC:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_3535 ,
            muxin_62 => Net_3534 ,
            muxin_61 => Net_3533 ,
            muxin_60 => Net_3532 ,
            muxin_59 => Net_3531 ,
            muxin_58 => Net_3530 ,
            muxin_57 => Net_3529 ,
            muxin_56 => Net_3528 ,
            muxin_55 => Net_3527 ,
            muxin_54 => Net_3526 ,
            muxin_53 => Net_3525 ,
            muxin_52 => Net_3524 ,
            muxin_51 => Net_3523 ,
            muxin_50 => Net_3522 ,
            muxin_49 => Net_3521 ,
            muxin_48 => Net_3520 ,
            muxin_47 => Net_3519 ,
            muxin_46 => Net_3517 ,
            muxin_45 => Net_3515 ,
            muxin_44 => Net_3514 ,
            muxin_43 => Net_3512 ,
            muxin_42 => Net_3510 ,
            muxin_41 => Net_3509 ,
            muxin_40 => Net_3507 ,
            muxin_39 => Net_3505 ,
            muxin_38 => Net_3504 ,
            muxin_37 => Net_3502 ,
            muxin_36 => Net_3500 ,
            muxin_35 => Net_3499 ,
            muxin_34 => Net_3497 ,
            muxin_33 => Net_3495 ,
            muxin_32 => Net_3494 ,
            muxin_31 => Net_3492 ,
            muxin_30 => Net_3490 ,
            muxin_29 => Net_3489 ,
            muxin_28 => Net_3487 ,
            muxin_27 => Net_3485 ,
            muxin_26 => Net_3484 ,
            muxin_25 => Net_3482 ,
            muxin_24 => Net_3480 ,
            muxin_23 => Net_3479 ,
            muxin_22 => Net_3477 ,
            muxin_21 => Net_3475 ,
            muxin_20 => Net_3474 ,
            muxin_19 => Net_3472 ,
            muxin_18 => Net_3470 ,
            muxin_17 => Net_3469 ,
            muxin_16 => Net_3467 ,
            muxin_15 => Net_3465 ,
            muxin_14 => Net_3464 ,
            muxin_13 => Net_3462 ,
            muxin_12 => Net_3460 ,
            muxin_11 => Net_3459 ,
            muxin_10 => Net_3457 ,
            muxin_9 => Net_3455 ,
            muxin_8 => Net_3454 ,
            muxin_7 => Net_3452 ,
            muxin_6 => Net_3450 ,
            muxin_5 => Net_3449 ,
            muxin_4 => Net_3447 ,
            muxin_3 => Net_3445 ,
            muxin_2 => Net_3444 ,
            muxin_1 => Net_3442 ,
            muxin_0 => Net_1560 ,
            hw_ctrl_en_63 => \ADC:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \ADC:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \ADC:AMuxHw_2_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \ADC:AMuxHw_2_Decoder_one_hot_3\ ,
            hw_ctrl_en_2 => \ADC:AMuxHw_2_Decoder_one_hot_2\ ,
            vout => \ADC:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |         | 
Port | Pin | Fixed |      Type |       Drive Mode |    Name | Connections
-----+-----+-------+-----------+------------------+---------+-------------------------------------------------------
   1 |   5 |     * |      NONE |      RES_PULL_UP |   SW(0) | 
     |   6 |     * |      NONE |      HI_Z_ANALOG |  VRy(0) | In(\ADC:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_3442)
     |   7 |     * |      NONE |      HI_Z_ANALOG |  VRx(0) | In(\ADC:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_1560)
-----+-----+-------+-----------+------------------+---------+-------------------------------------------------------
   2 |   1 |     * |      NONE |         CMOS_OUT | LED1(0) | In(Net_5622)
-----+-----+-------+-----------+------------------+---------+-------------------------------------------------------
   3 |   3 |     * |      NONE |         CMOS_OUT |   TX(0) | In(Net_12)
     |   4 |     * |      NONE |     HI_Z_DIGITAL |   RX(0) | FB(Net_11)
-----+-----+-------+-----------+------------------+---------+-------------------------------------------------------
  12 |   6 |     * |      NONE |     HI_Z_DIGITAL | Rx_1(0) | 
     |   7 |     * |      NONE |         CMOS_OUT | Tx_1(0) | In(Net_834)
--------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.000ms
Digital Placement phase: Elapsed time ==> 3s.567ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
Routing successful.
Digital Routing phase: Elapsed time ==> 2s.842ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.249ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.046ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in PSoC_5_QPN_Remote_Control_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.593ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.250ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 10s.553ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 10s.553ms
DEL: pft.M0074: information: A (re)build is required to use the analog device editor. Unable to load the necessary information from the cyfit file. Partial/wrong data will be displayed until this has been resolved.
 * E:\Projects\Yantronix\yantronix-psoc-robot-prototype\PSoC_5_QPN_Remote_Control.cydsn\PSoC_5_QPN_Remote_Control.cydwr ()

API generation phase: Elapsed time ==> 1s.812ms
Dependency generation phase: Elapsed time ==> 0s.015ms
Cleanup phase: Elapsed time ==> 0s.000ms
